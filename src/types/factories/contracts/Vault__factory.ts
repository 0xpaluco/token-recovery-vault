/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../common";
import type { Vault, VaultInterface } from "../../contracts/Vault";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "VaultError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "NewSafe",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "SafeUnlocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "TokenRescued",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_safeDetails",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bool",
        name: "unlocked",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "createSafe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getSafeDetails",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bool",
            name: "unlocked",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
        ],
        internalType: "struct Vault.Safe",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_safeId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_tokenAddresses",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_tokenIds",
        type: "uint256[]",
      },
    ],
    name: "rescueTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "throwError",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "unlockSafe",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a33610067565b6100626040518060400160405280601881526020017f4465706c6f79696e67205661756c7420436f6e747261637400000000000000008152506100b760201b610b911760201c565b610177565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100fe816040516024016100cb9190610122565b60408051601f198184030181529190526020810180516001600160e01b0390811663104c13eb60e21b1790915261010116565b50565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600060208083528351808285015260005b8181101561014f57858101830151858201604001528201610133565b81811115610161576000604083870101525b50601f01601f1916929092016040019392505050565b61114e80620001876000396000f3fe6080604052600436106100b15760003560e01c80638da5cb5b11610069578063c5277bf71161004e578063c5277bf7146101bd578063c6dcd54d14610259578063f2fde38b1461027957600080fd5b80638da5cb5b1461011d578063a0f60c511461014a57600080fd5b806337bb34f71161009a57806337bb34f7146100ed5780633ccfd60b14610100578063715018a61461010857600080fd5b806306c107c6146100b65780632f7643a8146100d8575b600080fd5b3480156100c257600080fd5b506100d66100d1366004610ed4565b610299565b005b3480156100e457600080fd5b506100d6610459565b6100d66100fb366004610f9f565b610472565b6100d661066e565b34801561011457600080fd5b506100d661072b565b34801561012957600080fd5b506000546040516001600160a01b0390911681526020015b60405180910390f35b34801561015657600080fd5b5061016a610165366004610fb8565b610791565b6040516101419190600060a0820190508251825260208301516001600160a01b03808216602085015280604086015116604085015250506060830151151560608301526080830151608083015292915050565b3480156101c957600080fd5b506102236101d8366004610fb8565b60026020818152600093845260408085209091529183529120805460018201549282015460039092015490926001600160a01b039081169290811691600160a01b90910460ff169085565b604080519586526001600160a01b039485166020870152929093169184019190915215156060830152608082015260a001610141565b34801561026557600080fd5b506100d6610274366004610fe2565b610867565b34801561028557600080fd5b506100d661029436600461101e565b610ab2565b3360009081526002602081815260408084208785529091529091200154600160a01b900460ff166103115760405162461bcd60e51b815260206004820152600e60248201527f53616665206973206c6f636b656400000000000000000000000000000000000060448201526064015b60405180910390fd5b33600081815260026020818152604080842088855290915290912001546001600160a01b0316146103845760405162461bcd60e51b815260206004820152601260248201527f53656e646572206e6f7420616c6c6f77656400000000000000000000000000006044820152606401610308565b805182511461039257600080fd5b3360009081526002602081815260408084208785528252808420815160a0810183528154815260018201546001600160a01b03908116948201949094529381015492831691840191909152600160a01b90910460ff1615156060830152600301546080820152905b8351811015610452576104408285838151811061041957610419611040565b602002602001015185848151811061043357610433611040565b6020026020010151610be9565b8061044a81611056565b9150506103fa565b5050505050565b604051635fd1392b60e01b815260040160405180910390fd5b33600081815260026020818152604080842086855290915290912001546001600160a01b0316146104e55760405162461bcd60e51b815260206004820152601060248201527f43616e7420756e6c6f636b2073616665000000000000000000000000000000006044820152606401610308565b336000818152600260209081526040808320858452909152902090313411156105505760405162461bcd60e51b815260206004820152601560248201527f496e73756666696369656e742062616c616e63652e00000000000000000000006044820152606401610308565b80600301543410156105a45760405162461bcd60e51b815260206004820152601360248201527f496e73756666696369656e742066756e64732e000000000000000000000000006044820152606401610308565b6002810154600160a01b900460ff16156106005760405162461bcd60e51b815260206004820152601060248201527f416c726561647920756e6c6f636b6564000000000000000000000000000000006044820152606401610308565b6002810180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b1790556040517fe4473ed82aaf35afe75120f4931eaa1f7905e023b411082e8e8b66f893647884906106629084815260200190565b60405180910390a15050565b6000546001600160a01b031633146106c85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610308565b600080546040516001600160a01b039091169047908381818185875af1925050503d8060008114610715576040519150601f19603f3d011682016040523d82523d6000602084013e61071a565b606091505b505090508061072857600080fd5b50565b6000546001600160a01b031633146107855760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610308565b61078f6000610d00565b565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101919091526107fa6040518060400160405280601481526020017f47657474696e6720536166652044657461696c73000000000000000000000000815250610b91565b506001600160a01b03918216600090815260026020818152604080842094845293815291839020835160a0810185528154815260018201548616938101939093529081015493841692820192909252600160a01b90920460ff161515606083015260030154608082015290565b6000546001600160a01b031633146108c15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610308565b6001600160a01b03831661090d5760405162461bcd60e51b81526020600482015260136024820152724e6f74206120746f6b656e206164647265737360681b6044820152606401610308565b6001600160a01b0382166109595760405162461bcd60e51b81526020600482015260136024820152724e6f74206120746f6b656e206164647265737360681b6044820152606401610308565b610967600180546001019055565b600061097260015490565b6040805160a0810182528281526001600160a01b03808816602080840191825288831684860181815260006060808801828152608089018d815294835260028087528a84208c85528752928a902098518955955160018901805491891673ffffffffffffffffffffffffffffffffffffffff199092169190911790559151908701805495511515600160a01b027fffffffffffffffffffffff00000000000000000000000000000000000000000090961691909616179390931790935591516003909301929092558251918201909252602e808252929350610a5f92909161111490830139858584610d5d565b826001600160a01b0316846001600160a01b03167f1fa0028f5aa7dba1bde6df3604783d47f519c78d891c631f646967ee0b2a76a783604051610aa491815260200190565b60405180910390a350505050565b6000546001600160a01b03163314610b0c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610308565b6001600160a01b038116610b885760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610308565b61072881610d00565b61072881604051602401610ba591906110ca565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663104c13eb60e21b179052610dc1565b6001600160a01b038216610c355760405162461bcd60e51b81526020600482015260136024820152724e6f74206120746f6b656e206164647265737360681b6044820152606401610308565b60208301516040808501519051632142170760e11b81526001600160a01b039283166004820152908216602482015260448101839052908316906342842e0e90606401600060405180830381600087803b158015610c9257600080fd5b505af1158015610ca6573d6000803e3d6000fd5b50505050816001600160a01b031683602001516001600160a01b03167f4143f7b5cb6ea007914c32b8a3e64cebc051d7f493fa0755454da1e47701e12583604051610cf391815260200190565b60405180910390a3505050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610dbb84848484604051602401610d7794939291906110dd565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16636eb7943d60e01b179052610dc1565b50505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610e2157610e21610de2565b604052919050565b600067ffffffffffffffff821115610e4357610e43610de2565b5060051b60200190565b80356001600160a01b0381168114610e6457600080fd5b919050565b600082601f830112610e7a57600080fd5b81356020610e8f610e8a83610e29565b610df8565b82815260059290921b84018101918181019086841115610eae57600080fd5b8286015b84811015610ec95780358352918301918301610eb2565b509695505050505050565b600080600060608486031215610ee957600080fd5b8335925060208085013567ffffffffffffffff80821115610f0957600080fd5b818701915087601f830112610f1d57600080fd5b8135610f2b610e8a82610e29565b81815260059190911b8301840190848101908a831115610f4a57600080fd5b938501935b82851015610f6f57610f6085610e4d565b82529385019390850190610f4f565b965050506040870135925080831115610f8757600080fd5b5050610f9586828701610e69565b9150509250925092565b600060208284031215610fb157600080fd5b5035919050565b60008060408385031215610fcb57600080fd5b610fd483610e4d565b946020939093013593505050565b600080600060608486031215610ff757600080fd5b61100084610e4d565b925061100e60208501610e4d565b9150604084013590509250925092565b60006020828403121561103057600080fd5b61103982610e4d565b9392505050565b634e487b7160e01b600052603260045260246000fd5b60006001820161107657634e487b7160e01b600052601160045260246000fd5b5060010190565b6000815180845260005b818110156110a357602081850181015186830182015201611087565b818111156110b5576000602083870101525b50601f01601f19169290920160200192915050565b602081526000611039602083018461107d565b6080815260006110f0608083018761107d565b6001600160a01b039586166020840152939094166040820152606001529291505056fe4372656174696e672061206e657720736166653a2066726f6d202725732720746f20272573272069642027257327a164736f6c634300080d000a";

type VaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Vault__factory extends ContractFactory {
  constructor(...args: VaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Vault> {
    return super.deploy(overrides || {}) as Promise<Vault>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Vault {
    return super.attach(address) as Vault;
  }
  override connect(signer: Signer): Vault__factory {
    return super.connect(signer) as Vault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultInterface {
    return new utils.Interface(_abi) as VaultInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Vault {
    return new Contract(address, _abi, signerOrProvider) as Vault;
  }
}
